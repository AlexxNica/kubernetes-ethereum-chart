apiVersion: apps/v1beta2 
kind: Deployment
metadata:
  name: geth-miner-deployment
  labels:
    app: geth-miner
spec:
  replicas: 3
  selector:
    matchLabels:
      app: geth-miner
  template:
    metadata:
      labels:
        app: geth-miner
    spec:
      containers:
      - name: geth-miner
        image: ethereum/client-go:v1.7.2
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --mine --minerthreads=1 --etherbase=0 --networkid=$(NETWORK_ID) --ethstats=$HOSTNAME:$(ETHSTATS_SECRET)@eth-stats-service.default"
        env:
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: ethstats-secret
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: geth-config
              key: networkid
        ports:
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: init-genesis
        image: ethereum/client-go:v1.7.2
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: create-account
        image: ethereum/client-go:v1.7.2
        command: ["/bin/sh"]
        args:
        - "-c"
        - "printf '$(ACCOUNT_SECRET)\n$(ACCOUNT_SECRET)\n' | geth account new"
        env:
        - name: ACCOUNT_SECRET
          valueFrom:
            secretKeyRef:
              name: geth-miner-secret
              key: accountsecret
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      - name: get-bootnodes
        image: ethereum/client-go:v1.7.2
        command: ["/bin/sh"]
        args:
        - "-c"
        - "apk add --no-cache curl && curl -v -o /root/.ethereum/bootnodes bootnode-registrar-service.default"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      volumes:
      - name: data
        emptyDir: {}
      - name: config 
        configMap:
          name: geth-config
---
apiVersion: v1
kind: Secret
metadata:
  name: geth-miner-secret
type: Opaque
data:
  # echo -n "very-secure-password" | base64
  accountsecret: dmVyeS1zZWN1cmUtcGFzc3dvcmQ=