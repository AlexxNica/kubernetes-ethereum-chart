apiVersion: apps/v1beta2 
kind: Deployment
metadata:
  name: geth-tx-deployment
  labels:
    app: geth-tx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: geth-tx
  template:
    metadata:
      labels:
        app: geth-tx
    spec:
      containers:
      - name: geth-tx
        image: ethereum/client-go:v1.7.2
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "geth --bootnodes=`cat /root/.ethereum/bootnodes` --rpc --rpcapi=eth,net,web3 --rpccorsdomain='*' --ws --networkid=98052 --ethstats=$(HOSTNAME):$(WS_SECRET)@eth-stats-service.default"
        env:
        - name: WS_SECRET
          valueFrom:
            secretKeyRef:
              name: ethstats-secret
              key: WS_SECRET
        ports:
        - name: rpc
          containerPort: 8545
        - name: ws
          containerPort: 8546
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: geth-init-genesis
        image: ethereum/client-go:v1.7.2
        args:
        - "init"
        - "--datadir=/etc/geth"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: genesis
          mountPath: /var/geth
      - name: geth-init-bootnodes
        image: ethereum/client-go:v1.7.2
        command: ["/bin/sh"]
        args:
        - "-c"
        - "apk add --no-cache curl && curl -v -o /root/.ethereum/bootnodes bootnode-registrar-service.default"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      volumes:
      - name: data
        emptyDir: {}
      - name: genesis
        secret:
          secretName: genesis-file